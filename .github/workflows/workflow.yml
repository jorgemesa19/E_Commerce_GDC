name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        node-options: '--max-old-space-size=4096'

    - name: Change directory to back
      run: cd back; npm install

    - name: Verify database connection
      run: cd back; node ./scripts/verify-db-connection.js

    - name: Build Angular app
      run: cd admin; npm install

    - name: Run ng serve and capture stdout
      run: cd admin && npm run start > stdout.log 2>&1 & sleep 10

    - name: Upload stdout log
      uses: actions/upload-artifact@v2
      with:
        name: stdout-log
        path: back/stdout.log

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta1
      uses: docker/metadata-action@v4
      with:
        images: jorgemesa19/ecommerce:admin01

    - name: Build and push Docker image 1
      uses: docker/build-push-action@v2
      with:
        context: ./admin
        dockerfile: Dockerfile
        push: true
        tags: ${{ steps.meta1.outputs.tags }}
        labels: ${{ steps.meta1.outputs.labels }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta2
      uses: docker/metadata-action@v4
      with:
        images: jorgemesa19/ecommerce:back01

    - name: Build and push Docker image 2
      uses: docker/build-push-action@v2
      with:
        context: ./back
        dockerfile: Dockerfile
        push: true
        tags: ${{ steps.meta2.outputs.tags }}
        labels: ${{ steps.meta2.outputs.labels }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta3
      uses: docker/metadata-action@v4
      with:
        images: jorgemesa19/ecommerce:tienda01

    - name: Build and push Docker image 3
      uses: docker/build-push-action@v2
      with:
        context: ./tienda
        dockerfile: Dockerfile
        push: true
        tags: ${{ steps.meta2.outputs.tags }}
        labels: ${{ steps.meta2.outputs.labels }}
